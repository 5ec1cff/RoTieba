name: CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
  merge_group:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_BASEDIR: "${{ github.workspace }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Write key
        if: ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/master' ) || github.ref_type == 'tag' }}
        run: |
          if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
            echo storePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> gradle.properties
            echo keyAlias='${{ secrets.ALIAS }}' >> gradle.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> gradle.properties
            echo storeFile='key.jks' >> gradle.properties
            echo ${{ secrets.KEY_STORE }} | base64 --decode > key.jks
          fi

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Build with Gradle
        run: |
          ./gradlew assemble

      - name: Upload release
        uses: actions/upload-artifact@v3
        with:
          name: "RoTieba-release-ci"
          path: "./app/build/outputs/apk/release/app-release.apk"

      - name: Upload release mapping
        uses: actions/upload-artifact@v3
        with:
          name: "release-mappings"
          path: "./app/build/outputs/mapping/release/"

      - name: Upload debug
        uses: actions/upload-artifact@v3
        with:
          name: "RoTieba-debug-ci"
          path: "./app/build/outputs/apk/debug/app-debug.apk"


